<?xml version="1.0" encoding="utf-8"?>
<mx:UIComponent xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				chromeColor="#000000" enterFrame="uicomponent1_enterFrameHandler(event)"
				initialize="initalize(event)" mouseWheel="uicomponent1_mouseWheelHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.cell.g2d.G2DScene;
			import com.cell.g2d.G2DSprite;
			import com.cell.gameedit.ResourceEvent;
			import com.cell.gameedit.ResourceLoader;
			import com.cell.gfx.game.CMapView;
			import com.cell.gfx.game.CSprite;
			import com.cell.util.CMath;
			
			import mx.events.FlexEvent;
			
			
//			var ldr	: Loader = new Loader();
//			var spr : Sprite = new Sprite();
			
			
			var resloader000000 : ResourceLoader;
			var resloader000002 : ResourceLoader;
			
			var cspr000000 : G2DSprite;
			var cspr000002 : G2DSprite;
			
			var cscene : G2DScene;
//			
//			var bitmap : Bitmap;
			var buffer : Bitmap = new Bitmap(new BitmapData(400, 300, false, 0xff0000));
			
			protected function initalize(event:FlexEvent):void
			{
//				var rect:Shape = new Shape();
//				rect.graphics.beginFill(0xffFF0000);
//				rect.graphics.drawRect(0, 0, 100, 100);
//				rect.graphics.endFill();
//				addChild(rect);
//				
//				ldr.contentLoaderInfo.addEventListener(Event.COMPLETE, complete);  
//				ldr.load(new URLRequest("../actor_000000/output/tiles.png"));

				resloader000000 = new ResourceLoader("../actor_000000/output/actor.xml");
				resloader000000.addEventListener(ResourceEvent.LOADED, loaded_set);
				resloader000000.load();
				
				resloader000002 = new ResourceLoader("../actor_000002/output/actor.xml");
				resloader000002.addEventListener(ResourceEvent.LOADED, loaded_set);
				resloader000002.load();

				addChild(buffer);
			}
			
			
//			private function complete(e:Event) : void
//			{
//				trace("complete");
//				//addChild(ldr);
//				bitmap = (ldr.content as Bitmap);
//				spr.graphics.beginBitmapFill(bitmap.bitmapData);
//				spr.graphics.drawRect(0,0,100,100);
//				spr.graphics.endFill();
//				//addChild(spr);
//			}
			
			private function loaded_set(e:ResourceEvent) : void
			{
				trace("loaded_set : " + e.res.getUrl());
				// ------------------------------------------
				if (e.res.getUrl().search("actor_000000")>=0)
				{
					
					cscene = new G2DScene(resloader000000.getMap("unamed_Map"), 400, 300);
					cscene.x = 400;
					cscene.y = 0;
					//					for (var i:int=0; i<1000; i++) {
					//						var cspr2 : CSprite = cspr.copy();
					//						cspr2.x = (width  * Math.random());
					//						cspr2.y = (height * Math.random());
					//						var a : int = (int)(Math.random() * cspr2.getAnimateCount());
					//						var f : int = (int)(Math.random() * cspr2.getFrameCount(a));
					//						cspr2.setCurrentFrame(a, f, false, true);
					//						cscene.addChild(cspr2);
					//					}
					//					addChild(cscene);
					addChild(cscene);
					
					
					cspr000000 = new G2DSprite(resloader000000.getSprite("000000"));	
					cspr000000.x = width/4 + (width/2  * Math.random());
					cspr000000.y = width/4 + (height/2 * Math.random());
					addChild(cspr000000);
					
					
				}
				else if (e.res.getUrl().search("actor_000002")>=0)
				{
					cspr000002 = new G2DSprite(resloader000002.getSprite("000002"));	
					addChild(cspr000002);
				}
				
				// ------------------------------------------
				// 
				
				// ------------------------------------------
			
			}
			

			protected function uicomponent1_enterFrameHandler(event:Event):void
			{
				graphics.clear();
				graphics.beginFill(0, 1);
				graphics.drawRect(0, 0, width, height);
				graphics.endFill();
				
				cscene.getCamera().resetBuffer();
				cscene.repaint();
				
				if (cspr000000 != null)
				{
					cspr000000.src.nextCycFrame();
					cspr000000.repaint();
				}
				if (cspr000002 != null)
				{
					cspr000002.x = mouseX;
					cspr000002.y = mouseY;
					cspr000002.src.nextCycFrame();
					cspr000002.repaint();
				}
			}


			protected function uicomponent1_mouseWheelHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (cspr000000 != null)
				{
					cspr000000.src.setCurrentFrame(
						cspr000000.src.getCurrentAnimate()+CMath.getDirect(event.delta), 
						0, false, true);
				}
				if (cspr000002 != null)
				{	
					cspr000002.src.setCurrentFrame(
						cspr000002.src.getCurrentAnimate()+CMath.getDirect(event.delta), 
						0, false, true);
				}
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
</mx:UIComponent>
