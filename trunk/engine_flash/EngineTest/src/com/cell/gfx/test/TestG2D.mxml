<?xml version="1.0" encoding="utf-8"?>
<mx:UIComponent xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				chromeColor="#000000" enterFrame="uicomponent1_enterFrameHandler(event)"
				focusEnabled="true" initialize="initalize(event)"
				keyDown="uicomponent1_keyDownHandler(event)"
				mouseWheel="uicomponent1_mouseWheelHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.cell.g2d.G2DScene;
			import com.cell.gameedit.ResourceEvent;
			import com.cell.gameedit.ResourceLoader;
			import com.cell.gfx.CellMapView;
			import com.cell.gfx.CellSprite;
			import com.cell.gfx.game.CGraphicsDisplay;
			import com.cell.gfx.game.CImage;
			import com.cell.gfx.game.CSprite;
			import com.cell.util.CMath;
			
			import mx.events.FlexEvent;
			
			var cg : CGraphicsDisplay;
			
			var res_scene000000 : ResourceLoader;
			var res_actor000002 : ResourceLoader;
			
			var cspr000002 : CellSprite;
						
			var cscene : G2DScene;

			protected function initalize(event:FlexEvent):void
			{
				cg = new CGraphicsDisplay(graphics);
				
				res_scene000000 = new ResourceLoader("../scene_000000/output/scene.xml");
				res_scene000000.addEventListener(ResourceEvent.LOADED, loaded_set);
				res_scene000000.load();
				
			}
			
			
			private function complete(e:Event) : void
			{
				trace("complete");
			}
			
			private function loaded_set(e:ResourceEvent) : void
			{
				trace("loaded_set : " + e.res.getUrl());
				// ------------------------------------------
				if (e.res == res_scene000000)
				{
					cscene = new G2DScene(res_scene000000, res_scene000000.getSetWorld("000000"), 400, 300);
					cscene.addEventListener(MouseEvent.MOUSE_DOWN, scene_mouseDown);
					cscene.addEventListener(MouseEvent.MOUSE_OVER, scene_mouseOver);
					addChild(cscene);
					res_actor000002 = new ResourceLoader("../actor_000002/output/actor.xml");
					res_actor000002.addEventListener(ResourceEvent.LOADED, loaded_set);
					res_actor000002.load();
				}
				else if (e.res == res_actor000002)
				{
					cspr000002 = new CellSprite(res_actor000002.getSprite("000002"));	
					cscene.addChild(cspr000002);
				}
			}
			

			protected function uicomponent1_enterFrameHandler(event:Event):void
			{
				if (cspr000002 != null)
				{
//					cspr000002.x = mouseX;
//					cspr000002.y = mouseY;
					
					cspr000002.src.nextCycFrame();
					cspr000002.repaint();
					
					cscene.locateCameraCenter(cspr000002.x, cspr000002.y);
				}
				
			}

			protected function uicomponent1_mouseWheelHandler(event:MouseEvent):void
			{
				if (cspr000002 != null)
				{	
					cspr000002.src.setCurrentAnimate(
						cspr000002.src.getCurrentAnimate()+CMath.getDirect(event.delta), true);
				}
			}
			
			protected function uicomponent1_keyDownHandler(event:KeyboardEvent):void
			{
				if (cspr000002 != null)
				{	
					if (event.keyCode == Keyboard.UP) {
						cscene.moveCamera(0, -10);
					}
					if (event.keyCode == Keyboard.DOWN) {
						cscene.moveCamera(0, 10);
					}
					if (event.keyCode == Keyboard.LEFT) {
						cscene.moveCamera(-10, 0);
					}
					if (event.keyCode == Keyboard.RIGHT) {
						cscene.moveCamera(10, 0);
					}
				}
			}
			
			protected function scene_mouseDown(event:MouseEvent):void
			{
				
				if (cspr000002 != null)
				{	
					trace("evt  : " + cscene.mouseX + "," + cscene.mouseY);
					trace("size : " + cscene.width + "," + cscene.height);
					//cscene.locateCameraCenter(cscene.mouseX, cscene.mouseY);
					cspr000002.x = cscene.mouseX;
					cspr000002.y = cscene.mouseY;
//					cscene.moveCamera(10, 0);
				}
			}
			
			protected function scene_mouseOver(event:MouseEvent):void
			{
				if (event.buttonDown) {
//					if (cspr000002 != null) {	
//						cspr000002.x = event.localX;
//						cspr000002.y = event.localY;
//					}
				}
			}

			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
</mx:UIComponent>
