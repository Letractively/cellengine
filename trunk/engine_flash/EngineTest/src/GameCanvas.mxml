<?xml version="1.0" encoding="utf-8"?>
<mx:UIComponent xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" initialize="initalize(event)" enterFrame="uicomponent1_enterFrameHandler(event)" mouseWheel="uicomponent1_mouseWheelHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.cell.gameedit.ResourceEvent;
			import com.cell.gameedit.ResourceLoader;
			import com.cell.gfx.game.CScene;
			import com.cell.gfx.game.CSprite;
			import com.cell.util.CMath;
			
			import mx.events.FlexEvent;
			
			
			var ldr:Loader = new Loader();
			var spr : Sprite = new Sprite();
			
			
			var resloader : ResourceLoader;
			
			var cspr : CSprite;
			
			var cscene : CScene;
			
			var bitmap : Bitmap;
			var buffer : Bitmap = new Bitmap(new BitmapData(800, 600, false, 0xff0000));
			
			protected function initalize(event:FlexEvent):void
			{
//				var rect:Shape = new Shape();
//				rect.graphics.beginFill(0xffFF0000);
//				rect.graphics.drawRect(0, 0, 100, 100);
//				rect.graphics.endFill();
//				addChild(rect);
//				
				ldr.contentLoaderInfo.addEventListener(Event.COMPLETE, complete);  
				ldr.load(new URLRequest("../actor_000000/output/tiles.png"));

				
				resloader = new ResourceLoader();
				resloader.addEventListener(ResourceEvent.LOADED, loaded_set);
				resloader.load("../actor_000000/output/actor.xml");
			
				
				addChild(buffer);
			}
			
			
			private function complete(e:Event) : void
			{
				trace("complete");
				//addChild(ldr);
				
				bitmap = (ldr.content as Bitmap);
				spr.graphics.beginBitmapFill(bitmap.bitmapData);
				spr.graphics.drawRect(0,0,100,100);
				spr.graphics.endFill();
				//addChild(spr);
				
			}
			
			private function loaded_set(e:Event) : void
			{
				trace("loaded_set");
				cspr = resloader.getSprite("000000");
//				resloader.getMap("unamed_Map"), 400, 300
				cscene = new CScene();
				cscene.x = 0;
				cscene.y = 0;
				for (var i:int=0; i<1000; i++) {
					var cspr2 : CSprite = cspr.copy();
					cspr2.x = (width  * Math.random());
					cspr2.y = (height * Math.random());
					var a : int = (int)(Math.random() * cspr2.getAnimateCount());
					var f : int = (int)(Math.random() * cspr2.getFrameCount(a));
					cspr2.setCurrentFrame(a, f, false, true);
					cscene.addChild(cspr2);
				}
				addChild(cscene);
				
				addChild(cspr);
				
			}
			

			protected function uicomponent1_enterFrameHandler(event:Event):void
			{
				if (cspr != null) {				
//					cspr.x = mouseX;
//					cspr.y = mouseY;
//					cspr.nextCycFrame();
//					for each (var o:CSprite in cspr_list) {
//						o.nextCycFrame();
//					}
//					cscene.repaint();
//					if (bitmap != null) {
//						for (var i:int=0; i<1000; i++) {
//							buffer.bitmapData.draw(bitmap.bitmapData);
//						}
//					}
				}
			}


			protected function uicomponent1_mouseWheelHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (cspr != null) {	
					cspr.setCurrentFrame(cspr.getCurrentAnimate()+1, 0, false, true);
				}
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
</mx:UIComponent>
