
//
// Cell game edit µ¼³ö½Å±¾·¶Àý
// 
// <OUTPUT>     ResesScriptSK.java
// 


import com.morefuntek.cell.*;
import com.morefuntek.cell.Game.*;

//--------------------------------------------------------------------------------------------------------------
// resource trunk
//--------------------------------------------------------------------------------------------------------------
public class ResesScript {
#<RESOURCE>

	#<IMAGES>
	//--------------------------------------------------------------------------------------------------------------
	// Images : <NAME>
	final static public void buildClipImages_<NAME>(IImages stuff){
	
		stuff.buildImages(CIO.loadImage("/<NAME>.png"),<COUNT>);
		
		#<CLIP> 
		stuff.addTile(<X>,<Y>,<W>,<H>);//<INDEX>
		#<END CLIP>
		
		stuff.gc();
	}
	#<END IMAGES>


	#<MAP>
	//--------------------------------------------------------------------------------------------------------------
	// Map : <NAME>
	final static public CMap createMap_<NAME>(IImages tiles,boolean isAnimate,boolean isCyc){
		
		//<X COUNT> x <Y COUNT>
		
		// tiles
	    CAnimates animates = new CAnimates(<SCENE PART COUNT>,tiles);
	    #<SCENE PART>
		animates.addPart(0,0,<TILE>,<TRANS>);//<INDEX>
		#<END SCENE PART>
		
	    animates.setFrame(new int[<SCENE FRAME COUNT>][]);
	    #<SCENE FRAME>
	    animates.setComboFrame(new int[]{<DATA>},<INDEX>);//<INDEX>
		#<END SCENE FRAME>
		
		short[][] tileMatrix = new short[][]{
			<TILE MATRIX>
		};
		
		// cds
		CCollides collides = new CCollides(<CD PART COUNT>);
	    #<CD PART>
	    if("<TYPE>"=="rect")
	    collides.addCDRect(<MASK>, <X1>, <Y1>, <W> , <H> );//<TYPE>//<INDEX>
		if("<TYPE>"=="line")
		collides.addCDLine(<MASK>, <X1>, <Y1>, <X2>, <Y2>);//<TYPE>//<INDEX>
		#<END CD PART>

		short[][] flagMatrix = new short[][]{
			<FLAG MATRIX>
		};
		
	    CMap ret = new CMap(
	            animates, 
	            collides, 
	            <CELL W>, <CELL H>, 
	            tileMatrix, 
	            flagMatrix, 
	            isAnimate,isCyc 
	            );
	
	    return ret;
	}
	#<END MAP>
	
	
	#<SPRITE>
	//--------------------------------------------------------------------------------------------------------------
	// Sprite : <NAME>
	final static public CSprite createSprite_<NAME>(IImages tiles){

	    // tiles
	    CAnimates animates = new CAnimates(<SCENE PART COUNT>,tiles);
	    #<SCENE PART>
		animates.addPart(<X>,<Y>,<TILE>,<TRANS>);//<INDEX>
		#<END SCENE PART>
		
	    animates.setFrame(new int[<SCENE FRAME COUNT>][]);
	    #<SCENE FRAME>
	    animates.setComboFrame(new int[]{<DATA>},<INDEX>);//<INDEX>
		#<END SCENE FRAME>
		
		
		// cds
	    CCollides collides = new CCollides(<CD PART COUNT>);
		#<CD PART>
	    if("<TYPE>"=="rect")
	    collides.addCDRect(<MASK>, <X1>, <Y1>, <W> , <H> );//<TYPE>//<INDEX>
	    if("<TYPE>"=="line")
	    collides.addCDLine(<MASK>, <X1>, <Y1>, <X2>, <Y2>);//<TYPE>//<INDEX>
	    #<END CD PART>
	    
	    collides.setFrame(new int[<CD FRAME COUNT>][]);
	    #<CD FRAME>
	    collides.setComboFrame(new int[]{<DATA>},<INDEX>);//<INDEX>
	    #<END CD FRAME>
	    
	    
		// sprite frame
	    int[][] frameAnimate = new int[][]{
	        <FRAME ANIMATE>
	    };
	    int[][] frameCDMap = new int[][]{
	        <FRAME CD MAP>
	    };
	    int[][] frameCDAtk = new int[][]{
	        <FRAME CD ATK>
	    };
	    int[][] frameCDDef = new int[][]{
	        <FRAME CD DEF>
	    };
	    int[][] frameCDExt = new int[][]{
	        <FRAME CD EXT>
	    };
	
	    CSprite ret = new CSprite(
	            animates, 
	            collides, 
	            frameAnimate, 
	            frameCDMap, 
	            frameCDAtk, 
	            frameCDDef, 
	            frameCDExt 
	            );
	
	    return ret;
	
	}
	#<END SPRITE>
	
#<END RESOURCE>
}

//--------------------------------------------------------------------------------------------------------------
// level trunk
//--------------------------------------------------------------------------------------------------------------
#<LEVEL>
	
	#<WORLD>
	//--------------------------------------------------------------------------------------------------------------
	// World : <NAME>
	class world_<NAME> extends CWorld{
	
		public String[] SprID = new String[<UNIT SPRITE COUNT>];
		public int[] SprX = new int[<UNIT SPRITE COUNT>];
		public int[] SprY = new int[<UNIT SPRITE COUNT>];
		
		
		public world_<NAME>
		
		public void initPath()
		{
			WayPoints = new CWayPoint[<WAYPOINT COUNT>];
			
			#<WAYPOINT> 
			 WayPoints[<INDEX>] = new CWayPoint(<X>,<Y>);
			#<END WAYPOINT>
		
			#<WAYPOINT LINK>
			 WayPoints[<START>].link(WayPoints[<END>]);//<INDEX>
			#<END WAYPOINT LINK>
		}
		
		public void initData(){
			// sprite count : <UNIT SPRITE COUNT>
			#<UNIT SPRITE>
			//<IDENTIFY> <INDEX> <X> <Y>
			SprID[<INDEX>] = "<IDENTIFY>";
			SprX[<INDEX>] = <X>;
			SprY[<INDEX>] = <Y>;
			#<END UNIT SPRITE>
		}
		
	}
	#<END WORLD>
	
#<END LEVEL>




